(a) Rubyでは、継承によって新しいクラスを作成する際、親クラスは1つまでしか指定することができない。
Rubyでは、継承の考え方が「単一継承」（親クラスに指定できるクラスを常に1つに限定する考え方）の為複数の親クラスを継承できる考え方を「多重継承」という

(b) Rubyでは、Mix-inという機能を使うことで、クラスに任意の個数の親クラスを与えることができる。
Mix-in機能は、Mix-in機能は、モジュールとしてまとめられたコードをincludeメソッドによってクラスに取り込むことで、多重継承と同じメリットを得るもの。
モジュールの取り込みであって、親クラスを増やすわけではない。

(c) Rubyのモジュールは、Mix-in機能によってクラスそのものとして振る舞うことが出来るようになる。
Mix-in機能は、モジュールを既存のクラスに取り込むことで、複数のクラスに共通の機能拡張を施すものであり、モジュールをクラスのように振る舞わせる機能ではない。

(d) Rubyのクラスは、includeメソッドによって他のクラスに取り込むことが出来る。
includeメソッドによって取り込むことが出来る対象は、モジュールに限定されている。
クラスをincludeすることはできない。
----------------------------------------------------------------------------------------------------------

rubyのクラス継承
＜（しょうなり）を使うここでスーパークラスを継承できる
「superclassメソッドでスーパークラスの確認ができる」

class Parent
  def hoge
    p "Parentだよ"
  end
end

class Child < Parent
end

Child.superclass # => Parent

child = Child.new
child.hoge # => "Parentだよ"が表示

----------------------------------------------------------------------------------------------------------

親クラスを指定しない場合

class Child
end

Child.superclass # => Object

objectがクラスを継承している

----------------------------------------------------------------------------------------------------------
*Mix-inは別紙記入
